路由
===========


路由的概念
----------------

什么是路由？
""""""""""""""""
路由是用来把请求映射到 **路由处理程序** 。应用程序一启动就配置了路由，并且可以从URL中提取值用于处理请求。它还负责使用 ASP.NET 应用程序中定义的路由来生成链接。

一个应用会有单个 **路由集合** 。这个集合会按顺序处理。请求会在这个路由集合里按照 *URL matching* 来查找匹配。响应使用路由生成 URLs


路由的作用
"""""""""""""
路由使用 ``routes`` 类 ( ``IRouter`` 的实现) 做到:

* 映射传入的请求到 **路由处理程序**
* 生成响应中使用的 URLs

URL 匹配
-----------

什么是路由匹配
"""""""""""""""
**路由匹配** 指的是路由调度请求到一个处理程序的过程.

这个过程通常是 **基于URL路径中的数据** ，但 **可以扩展到请求中的任何数据** .

调度请求到不同处理程序的能力是应用调节自身大小和复杂度的关键

如何进行路由匹配？
""""""""""""""""""""""
请求调用序列中每个路由的 **异步方法** 来进入路由中间件。 ``IRouter`` 实例通过设置 ``RouteContext Handler`` 为一个不为空的 ``RequestDelegate`` 来选择是否处理请求。

如果一个处理程序已经设置了路由，那么它就将被调用来处理这个请求，并且不会有其他的路由再去处理。如果所有的路由都执行了，请求还没有找到处理程序，那么中间件就会调用 ``next`` 方法，从而下一个在请求管道中的中间件就被调用了.


RouteAsync
"""""""""""""""
``RouteAsync`` 的主要输入是和当前请求关联的 ``RouteContext HttpContext`` 。在一个成功匹配之后， ``RouteContext.Handler`` 和   ``RouteContext RouteData`` 会作为输出

